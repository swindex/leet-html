{
  "fileTypes": [
    "js",
    "jsx",
    "ts",
    "tsx",
    "html"
  ],
  "injectionSelector": "L:source.js -comment -string, L:source.js -comment -string, L:source.jsx -comment -string,  L:source.js.jsx -comment -string, L:source.ts -comment -string, L:source.tsx -comment -string",
  "injections": {
    "L:source": {
      "patterns": [
        {
          "match": "<",
          "name": "invalid.illegal.bad-angle-bracket.html"
        }
      ]
    }
  },
  "patterns": [
    {
      "begin": "(return)\\s*(`)",
      "beginCaptures": {
				"1": {
					"name": "keyword.control.flow.js"
        }
      },
      "end": "(`)",
      "patterns": [
        {
          "include": "source.ts#template-substitution-element"
        },
        {
          "include": "text.html.basic"
        }
      ]
    },

    {
      "begin": "(\\=)\\s*(`)",
      "beginCaptures": {
				"1": {
					"name": "keyword.operator.assignment.js"
        }
      },
      "end": "(`)",
      "patterns": [
        {
          "include": "source.ts#template-substitution-element"
        },
        {
          "include": "text.html.basic"
        }
      ]
    },

    {
      "begin": "(\\+=)\\s*(`)",
      "beginCaptures": {
				"1": {
					"name": "keyword.operator.assignment.compound.js"
        }
      },
      "end": "(`)",
      "patterns": [
        {
          "include": "source.ts#template-substitution-element"
        },
        {
          "include": "text.html.basic"
        }
      ]
    },

    {
      "begin": "(\\+)\\s*(`)",
      "beginCaptures": {
				"1": {
					"name": "keyword.operator.arithmetic.js"
        }
      },
      "end": "(`)",
      "patterns": [
        {
          "include": "source.ts#template-substitution-element"
        },
        {
          "include": "text.html.basic"
        }
      ]
    },

    {
      "begin": "(\\,)\\s*(`)",
      "beginCaptures": {
				"1": {
					"name": "keyword.operator.arithmetic.js"
        }
      },
      "end": "(`)",
      "patterns": [
        {
          "include": "source.ts#template-substitution-element"
        },
        {
          "include": "text.html.basic"
        }
      ]
    },

    {
      "begin": "(\\?|\\:)\\s*(`)",
      "beginCaptures": {
				"1": {
					"name": "keyword.operator.ternary.js"
        }
      },
      "end": "(`)",
      "patterns": [
        {
          "include": "source.ts#template-substitution-element"
        },
        {
          "include": "text.html.basic"
        }
      ]
    },

    {
      "begin": "(\\/\\*(h(?:tm[lx]?)?|s(?:vg)?)\\*\\/)\\s*(`)",
      "beginCaptures": {
				"1": {
          "name": "comment.block.js"
        }
      },
      "end": "(`)",
      "patterns": [
        {
          "include": "source.ts#template-substitution-element"
        },
        {
          "include": "text.html.basic"
        }
      ]
    },

    {
      "begin": "(?:^|\\s|\\.)(h(?:tm[lx]?)?|s(?:vg)?)(?:\\([^)]*\\))?(`)",
      "beginCaptures": {
        "1": {
          "name": "entity.name.function.tagged-template.ts"
        },
        "2": {
          "name": "punctuation.definition.string.template.begin.ts"
        }
      },
      "end": "(`)",
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.string.template.end.ts"
        }
      },
      "patterns": [
        {
          "include": "source.ts#template-substitution-element"
        },
        {
          "include": "text.html.basic"
        }
      ]
    }
  ],
  "scopeName": "inline.leet-html"
}
